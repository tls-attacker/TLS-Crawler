version: '2.1'
services:
  rabbitmq:
    network_mode: "host"
    image: rabbitmq:3-management
    volumes:
      - "./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
    restart: "no"
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    # networks:
      # - crawler_overlay
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 5
  mongo:
    network_mode: "host"
    image: mongo:latest
    volumes:
      - "./mongodata:/data/db"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadminpw
    ports:
      - 127.0.0.1:27017:27017
    # networks:
      # - crawler_overlay
  controller:
    network_mode: "host"
    cap_add:
      - NET_RAW
      - NET_ADMIN
    build:
      context: .
      dockerfile: Dockerfile-Censor-Scan_Copy
      args:
        NEXUS_USERNAME: ${NEXUS_USERNAME}
        NEXUS_PASSWORD: ${NEXUS_PASSWORD}
        GIT_USR: ${GIT_USR}
        GIT_PWD: ${GIT_PWD}
        MODVAR_BRANCH: ${MODVAR_BRANCH}
        ASN1_BRANCH: ${ASN1_BRANCH}
        X509_BRANCH: ${X509_BRANCH}
        ATTACKER_BRANCH: ${ATTACKER_BRANCH}
        SCANNER_BRANCH: ${SCANNER_BRANCH}
    restart: "no"
    command: controller
      -hostFile resources/echo_ip_example.txt
      -denylist resources/denylist.txt
      -portToBeScanned 443
      -mongoDbHost localhost -mongoDbPort 27017 -mongoDbUser mongoadmin -mongoDbPass mongoadminpw
      -mongoDbAuthSource admin
      -rabbitMqHost localhost -rabbitMqPort 5672
      -scanName echoScan
      -scanType TLS_CENSOR_ECHO
      -monitorScan
    volumes:
      - "./resources:/resources"
    # networks:
      # - crawler_overlay
    depends_on:
      rabbitmq:
        condition: service_healthy
  worker:
    network_mode: "host"
    cap_add:
      - NET_RAW
      - NET_ADMIN
    build:
      context: .
      dockerfile: Dockerfile-Censor-Scan_Copy
      args:
        NEXUS_USERNAME: ${NEXUS_USERNAME}
        NEXUS_PASSWORD: ${NEXUS_PASSWORD}
        GIT_USR: ${GIT_USR}
        GIT_PWD: ${GIT_PWD}
        MODVAR_BRANCH: ${MODVAR_BRANCH}
        ASN1_BRANCH: ${ASN1_BRANCH}
        X509_BRANCH: ${X509_BRANCH}
        ATTACKER_BRANCH: ${ATTACKER_BRANCH}
        SCANNER_BRANCH: ${SCANNER_BRANCH}
    command: worker
      -ipRangesFile resources/ip_range_as_map.txt
      -mongoDbHost localhost -mongoDbPort 27017
      -mongoDbUser mongoadmin -mongoDbPass mongoadminpw -mongoDbAuthSource admin
      -rabbitMqHost localhost -rabbitMqPort 5672
      -numberOfThreads 100
      -parallelProbeThreads 100
      -scanTimeout 4000000
      -outputFolder /CensorScanner/output
      -censorshipAttempts 5
      -sniHostNames twitter.com,example.org
      -socketTimeout 10000
    volumes:
      - "./resources:/resources"
      - "./static_saves:/CensorScanner/output"
    # networks:
      # - crawler_overlay
    depends_on:
      rabbitmq:
        condition: service_healthy
volumes:
  mongodata:
  static_saves:

# networks:
#   crawler_overlay: